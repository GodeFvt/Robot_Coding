#include <MCP3008.h>

#define CS_PIN 4
#define CLOCK_PIN 0
#define MOSI_PIN 2
#define MISO_PIN 1
MCP3008 adc(CLOCK_PIN, MOSI_PIN, MISO_PIN, CS_PIN);
#define PWMA  3   //motor L
#define AIN1  12
#define PWMB  11  //motor R
#define BIN1  13

uint8_t Unit_sensor = 8;
uint16_t sensor_pin[8];
uint16_t Black_sensor_values[] = {245  , 217 , 350 , 230, 246, 240, 246 , 232 };
uint16_t White_sensor_values[] = {989 , 988, 992, 990, 989 , 987, 990, 991 };
uint32_t Last_Position;
int  power, base, error, last_error, L_motor, R_motor, r, RL_motor;
int c1 = 0, cou = 0;


void setup() {

  Serial.begin(9600);
  pinMode(PWMA, OUTPUT);
  pinMode(AIN1, OUTPUT);
  pinMode(PWMB, OUTPUT);
  pinMode(BIN1, OUTPUT);

}
void loop() {
  //30, 0.015, 0.13
  delay(1000);
  //view();
//    times(50, 0.022, 0.17, 200);
//    times3(60, 0.02, 0.17, 200);
//    times(50, 0.02, 0.17, 100);
//    tagL(-50, 50, 110);
//    times(50, 0.020, 0.20, 250);
//    tagL(-50, 50, 85);
//    times(50, 0.022, 0.17, 200);
//    //times(50, 0.020, 0.15, 700);
//    times3(60, 0.025, 0.16, 800);
//    tagL(50, -50, 130);
//    times(50, 0.020, 0.20, 210);
//    tagR(50, -50, 80);
//    times(50, 0.022, 0.23, 200);
//    tagR(50, -50, 70);
//    times(50, 0.02, 0.17, 300);
//  
//    times(50, 0.02, 0.17, 100);
//    times2(80,  0.022, 0.2, 200);
//    times(50, 0.02, 0.17, 500);
//    times2(65,  0.017, 0.28, 660 );
//    //  times(60, 0.022, 0.39, 700);
//    //  //times3(60, 0.039, 0.3, 1200);
//    //  times2(40, 0.025, 0.3, 50);
//    tagB(50, -50, 85);
//    times(50, 0.02, 0.17, 100);
//    tagR(50, -50, 70);
//  
//    times(50, 0.02, 0.17, 350);
//    tagR(50, -50, 90);
//    times(50, 0.020, 0.20, 300);
//    tagR(50, -50, 60);
//    times(50, 0.017, 0.21, 400);
//    tagR(50, -50, 60);
//    times(50, 0.025, 0.22, 300);
//    times(60, 0.025, 0.22, 100);
//    times2(80, 0.025, 0.6, 250);
//    //  //  //  //////////////////////////////////////////////////////////////////////////////////////////////
//    motor1(-50);
//    motor2(50);
//    delay(210);
//    times(50, 0.022, 0.2, 200);
//    times3(60, 0.02, 0.17, 200);
//    times(50, 0.02, 0.17, 100);
//    tagL(-50, 50, 90);
//    times(50, 0.02, 0.17, 640);
//  
//    tagL(-50, 50, 90);
//    times(50, 0.020, 0.20, 250);
//    tagL(-50, 50, 85);
//    times(50, 0.022, 0.23, 100);
//  
//    tagL(-50, 50, 90);
//    times(30, 0.02, 0.17, 376);
//  
//    tagL1(-20, 20, 130);
//    times2(20,  0.02, 0.2, 100);
//    times2(60,  0.02, 0.29, 700);
//  
//    times(50, 0.02, 0.17, 450);
//    times2(90,  0.022, 0.2, 190);
//    tagL(-50, 50, 90);
//  
//    times(50, 0.02, 0.17, 440);
//    tagR(-50, 50, 90);
//    times(50, 0.020, 0.20, 210);
//    tagL(-50, 50, 92);
//    times(50, 0.022, 0.17, 1080);
//  
//    tagL(50, -50, 90);
//    times(50, 0.020, 0.20, 210);
//    tagR(50, -50, 80);
//    times(50, 0.022, 0.23, 100);
//    times(60, 0.025, 0.22, 100);
//    times2(80, 0.025, 0.6, 250);

///////////////
  times(50, 0.022, 0.17, 200);
  times3(60, 0.02, 0.17, 200);
  times(50, 0.02, 0.17, 100);
  tagL(-50, 50, 100);
  times(50, 0.020, 0.20, 250);
  tagL(-50, 50, 80);
  //times(50, 0.022, 0.17,100);
  times3(40, 0.022 , 0.14, 1050);
  //  times4(85, 0.034, 0.19, 750);
  tagL(50, -50, 120);
  times(50, 0.020, 0.20, 210);
  tagR(50, -50, 45);
  times(50, 0.022, 0.23, 200);
  tagR(50, -50, 45);
  times(50, 0.02, 0.19, 300);
  times4(85,  0.031, 0.32, 680);
  ////  times(50, 0.02, 0.17, 100);
  ////  times2(100,  0.022, 0.2, 300);
  ////  times(50, 0.02, 0.17, 500);
  times2(65,  0.017, 0.28, 300 );
  times2(45,  0.012, 0.17, 435 );
  ////  //  times(60, 0.022, 0.39, 700);
  ////  //  //times3(60, 0.039, 0.3, 1200);
  ////  //  times2(40, 0.025, 0.3, 50);
  tagB(50, -50, 120);
  times(50, 0.022, 0.17, 90);
  tagR(50, -50, 60);
  times(50, 0.02, 0.17, 410);
  tagR(50, -50, 90);
  times(50, 0.020, 0.20, 300);
  tagR(50, -50, 60);
  times(50, 0.017, 0.21, 390);
  tagR(50, -50, 60);
  times(50, 0.025, 0.22, 300);
  times(60, 0.025, 0.22, 100);
  times2(90, 0.025, 0.6, 190);
  //  //  //  //////////////////////////////////////////////////////////////////////////////////////////////
  motor1(-50);
  motor2(50);
  delay(210);
  times(50, 0.022, 0.2, 100);
  times3(60, 0.02, 0.17, 200);
  times(50, 0.02, 0.17, 50);
  tagL(-50, 50, 80);
  times(50, 0.02, 0.17, 640);

  tagL(-50, 50, 90);
  times(50, 0.020, 0.20, 250);
  tagL(-50, 50, 85);
  times(50, 0.022, 0.23, 100);

  tagL(-50, 50, 90);
  times(30, 0.02, 0.17, 376);

  tagL1(-20, 20, 99);
  times2(20,  0.02, 0.2, 100);
  times2(60,  0.02, 0.29, 700);

  times4(80,  0.03, 0.31, 540);
  tagL(-50, 50, 75);

  times(50, 0.02, 0.17, 440);
  tagR(-50, 50, 90);
  times(50, 0.020, 0.20, 210);
  tagR(-50, 50, 135);
  times3(55, 0.022 , 0.14, 940);


  tagL(50, -50, 90);
  times(50, 0.020, 0.20, 210);
  tagR(50, -50, 80);
  times(50, 0.022, 0.23, 100);
  times(60, 0.025, 0.22, 100);
  times4(100,  0.03, 0.31, 400);

  motor1(0);
  motor2(0);
  delay(10000000000000);

}
